# Server

port {{ openvpn_server_port }}
proto {{ openvpn_server_proto }}

dev tun1

ca ca.crt
cert {{ inventory_hostname }}.crt
key {{ inventory_hostname }}.key  # This file should be kept secret
dh dh.pem

{# topology subnet #}

server {{ openvpn_tunnel_cidr | ipaddr('network') }} {{ openvpn_tunnel_cidr | ipaddr('netmask') }}

# Maintain a record of client <-> virtual IP address
# associations in this file.  If OpenVPN goes down or
# is restarted, reconnecting clients can be assigned
# the same virtual IP address from the pool that was
# previously assigned.
ifconfig-pool-persist ipp.txt

#client-config-dir ccd
#{% for item in openvpn_clients %}
#route {{ hostvars[item].openvpn_intra_ipv4.network }} {{ hostvars[item].openvpn_intra_ipv4.netmask }}
#{% endfor %}

# EXAMPLE: Suppose you want to give
# Thelonious a fixed VPN IP address of 10.9.0.1.
# First uncomment out these lines:
;client-config-dir ccd
;route 10.9.0.0 255.255.255.252
# Then add this line to ccd/Thelonious:
#   ifconfig-push 10.9.0.1 10.9.0.2

;push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"

client-to-client

# Uncomment this directive if multiple clients
# might connect with the same certificate/key
duplicate-cn
keepalive 10 120

# on the server and '1' on the clients.
tls-auth ta.key 0 # This file is secret

cipher AES-256-CBC

;push "compress lz4-v2"
;comp-lzo

;max-clients {{ openvpn_clients | count }}
max-clients 10

user nobody
group nogroup

persist-key
persist-tun

status openvpn-status.log

verb 3

# Notify the client that when the server restarts so it
# can automatically reconnect.
{# {% if openvpn_server_proto == 'udp' %}
explicit-exit-notify 1
{% else %}
explicit-exit-notify 0
{% endif %} #}
